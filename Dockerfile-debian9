FROM debian:9

ENV NAME askapsoft

# This line instructs debconf to store in its database an answer for the program
# debconf. If (the running program) debconf later asks (the database of answers)
# debconf what is my frontend the answer will be frontend is Noninteractive
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

# Install system packages
RUN apt-get update && apt-get install -y \
    ant \
    ant-optional \
    astyle \
    autoconf \
    bison \
    build-essential \
    bzip2 \
    clang-format \
    curl \
    exuberant-ctags \
    flex \
    fonts-inconsolata \
    fonts-liberation \
    g++ \
    gcc \
    gcc-6-plugin-dev \
    gdebi \
    gfortran \
    git \
    libatlas-base-dev \
    libatlas-dev \
    libblas-dev \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    liblapack-dev \
    libopenmpi-dev \
    libpng-dev \
    linux-headers-amd64 \
    meld \
    openjdk-8-doc \
    openjdk-8-jdk \
    openmpi-bin \
    pkg-config \
    python-dev \
    python-gpgme \
    python3-dev \
    python3-pip \
    python3-virtualenv \
    scons \
    subversion \
    sudo \
    terminator \
    tree \
    ttf-dejavu \
    unzip \
    vim-gtk \
    virtualenvwrapper \
 && rm -rf /var/lib/apt/lists/*

# Create the askap user, with sudo permissions
RUN adduser askapuser
RUN echo "user ALL=(root) NOPASSWD:ALL" > /etc/sudoers.d/askapuser && \
    chmod 0440 /etc/sudoers.d/askapuser
WORKDIR /home/askapuser

# Set up the home directory and mount point
ADD . /home/askapuser
#RUN mkdir /home/askapuser/code
RUN chown -R askapuser:askapuser /home/askapuser
VOLUME /home/askapuser/code

USER askapuser

# Set the DISPLAY variable so I can run GUI apps inside the container.
# See: https://stackoverflow.com/questions/16296753/can-you-run-gui-apps-in-a-docker-container/25280523#25280523
ENV DISPLAY :0

# Update Vim plugins
ENV TERM xterm
RUN echo | echo | vim +qall
RUN echo | echo | vim +PluginInstall! +qall
